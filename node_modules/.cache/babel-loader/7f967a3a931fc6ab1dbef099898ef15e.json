{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, setBlockTracking as _setBlockTracking, createTextVNode as _createTextVNode, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", {\n    class: _normalizeClass([\"test\", _ctx.box1computed]),\n    onClick: _cache[1] || (_cache[1] = $event => $options.selectedBox(1))\n  }, [_createElementVNode(\"h1\", null, _toDisplayString($data.counter), 1\n  /* TEXT */\n  ), _cache[0] || (_setBlockTracking(-1), _cache[0] = _createElementVNode(\"h1\", null, [_createTextVNode(_toDisplayString($data.counter), 1\n  /* TEXT */\n  )]), _setBlockTracking(1), _cache[0])], 2\n  /* CLASS */\n  ), _createCommentVNode(\" <input type=\\\"text\\\" v-bind=\\\"{newName}\\\" @click=\\\"changeName()\\\"> \"), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"test\", {\n      active: $data.isBox2\n    }]),\n    onClick: _cache[4] || (_cache[4] = $event => $options.selectedBox(2))\n  }, [_createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = $event => $options.add(5))\n  }, \"add 5\"), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = $event => $options.remove(3))\n  }, \"remove 3\")], 2\n  /* CLASS */\n  ), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"test\", {\n      active: $data.isBox3\n    }]),\n    onClick: _cache[8] || (_cache[8] = $event => $options.selectedBox(3))\n  }, [_createElementVNode(\"p\", null, \"full name : \" + _toDisplayString($options.fullNameComputed), 1\n  /* TEXT */\n  ), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.name = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.name]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.lastName = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.lastName]]), _hoisted_1, _createElementVNode(\"button\", {\n    onClick: _cache[7] || (_cache[7] = (...args) => $options.resetName && $options.resetName(...args))\n  }, \"reset fullName\")], 2\n  /* CLASS */\n  )], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;gCAqBAA,oBAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI;AAAA;AAAJ;;;6DApBAA,oBAKM,KALN,EAKM;AALDC,SAAK,mBAAC,MAAD,EAAgBC,iBAAhB,EAKJ;AAJLC,WAAK,sCAAEC,qBAAW,CAAX,CAAF;AAIA,GALN,GAGEJ,oBAAsB,IAAtB,EAAsB,IAAtB,EAAsBK,iBAAfC,aAAe,CAAtB,EAAc;AAAA;AAAd,sDACAN,oBAA6B,IAA7B,EAA6B,IAA7B,EAA6B,mCAAfM,gBAAO;AAAA;GAAQ,CAA7B,oCAJF;;AAAA,KAMAC,6FACAP,oBAKM,KALN,EAKM;AALDC,SAAK,mBAAC,MAAD,EAAO;AAAAO,cAAiBF;AAAjB,KAAP,EAKJ;AAJLH,WAAK,sCAAEC,qBAAW,CAAX,CAAF;AAIA,GALN,GAGEJ,oBAAsC,QAAtC,EAAsC;AAA7BG,WAAK,sCAAEC,aAAG,CAAH,CAAF;AAAwB,GAAtC,EAAwB,OAAxB,GACAJ,oBAA4C,QAA5C,EAA4C;AAAnCG,WAAK,sCAAEC,gBAAM,CAAN,CAAF;AAA8B,GAA5C,EAA2B,UAA3B,EAJF;;AAAA,KAOAJ,oBAQM,KARN,EAQM;AARDC,SAAK,mBAAC,MAAD,EAAO;AAAAO,cAAiBF;AAAjB,KAAP,EAQJ;AAPLH,WAAK,sCAAEC,qBAAW,CAAX,CAAF;AAOA,GARN,GAGEJ,oBAAyC,GAAzC,EAAyC,IAAzC,EAAG,iBAAYK,iBAAGD,yBAAH,CAAf,EAAkC;AAAA;AAAlC,qBACFJ,oBAAkC,OAAlC,EAAkC;AAA3BS,QAAI,EAAC,MAAsB;+DAANH,aAAII;AAAE,GAAlC;;AAAA,oBAA4BJ,+BAC5BN,oBAAsC,OAAtC,EAAsC;AAA/BS,QAAI,EAAC,MAA0B;+DAAVH,iBAAQI;AAAE,GAAtC;;AAAA,oBAA4BJ,mBAC5BK,YACAX,oBAAkD,QAAlD,EAAkD;AAAzCG,WAAK,yCAAEC,iDAAF;AAAoC,GAAlD,EAA2B,gBAA3B,EAPA;;AAAA","names":["_createElementVNode","class","_ctx","onClick","$options","_toDisplayString","$data","_createCommentVNode","active","type","$event","_hoisted_1"],"sourceRoot":"","sources":["/home/felidrick/Projects/VueProjects/learn1/src/App.vue"],"sourcesContent":["<template>\n<div class=\"test\" :class=\"box1computed\"\n@click=\"selectedBox(1)\"\n>\n  <h1> {{counter}} </h1>\n  <h1 v-once> {{counter}} </h1>\n</div>\n<!-- <input type=\"text\" v-bind=\"{newName}\" @click=\"changeName()\"> -->\n<div class=\"test\" :class=\"{active:isBox2}\"\n@click=\"selectedBox(2)\"\n>\n  <button @click=\"add(5)\">add 5</button>\n  <button @click=\"remove(3)\">remove 3</button>\n</div>\n\n<div class=\"test\" :class=\"{active:isBox3}\"\n@click=\"selectedBox(3)\"\n>\n  <p>full name : {{ fullNameComputed }}</p>\n<input type=\"text\" v-model=\"name\">\n<input type=\"text\" v-model=\"lastName\">\n<br>\n<button @click=\"resetName\">reset fullName</button>\n</div>\n</template>\n\n<script>\n// import HelloWorld from './components/HelloWorld.vue'\n\nexport default {\n  // name: 'App',\n  // components: {\n  //   HelloWorld\n  // }\n  data(){\n    return {\n      counter:0,\n      name:'',\n      lastName:'',\n      fullName:'',\n      isBox1:false,\n      isBox2:false,\n      isBox3:false,\n    }\n  },\n  methods:{\n    add(num){\n      this.counter += num;\n    },\n    remove(num){\n      this.counter -= num;\n    },\n    setName(event){\n      this.name = event.target.value;\n    },\n    resetName(){\n      console.log('reset name executed');\n      this.name = '';\n      this.lastName = '';\n    },\n    selectedBox(num){\n      if(num === 1){\n        this.isBox1 = !this.isBox1;\n      }else if(num === 2){\n        this.isBox2 = !this.isBox2;\n      }else if(num === 3){\n        this.isBox3 = !this.isBox3;\n      }\n    },\n  },\n  watch:{\n    counter(value){\n      if(value > 20){\n        this.counter = 0;\n      }\n    }\n    // name(value){\n    //   if(value === ''){\n    //     this.fullName = '';\n    //   }else{\n    //     this.fullName = value + ' ' + this.lastName;\n    //   }\n    // },\n    // lastName(value){\n    //   if(value === ''){\n    //     this.fullName = '';\n    //   }else{\n    //     this.fullName = this.name + ' ' + value;\n    //   }\n    // }\n  },\n  computed:{\n    fullNameComputed(){\n      console.log('full name executed');\n      if(this.name === '' || this.lastName === ''){\n        return '';\n      }else{\n        return this.name + ' ' + this.lastName ;\n      }\n    }\n  },\n  box1computed(){\n    return {active:isBox1}\n  }\n}\n\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n\n.test{\n  border: 3px dotted #2c3e50;\n  margin: 7px;\n  padding: 5px;\n}\n\n.inactive{\n  /* border-color:grey; */\n  /* background-color:rgb(230, 228, 228); */\n}\n\n.active{\n  background-color:rgb(230, 228, 228);\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}