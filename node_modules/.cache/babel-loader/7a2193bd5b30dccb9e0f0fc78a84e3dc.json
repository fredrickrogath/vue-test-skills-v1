{"ast":null,"code":"import { createElementVNode as _createElementVNode, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"header\", null, [/*#__PURE__*/_createElementVNode(\"h1\", null, \"Testing vue js Project 1\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_2 = {\n  id: \"game\"\n};\nconst _hoisted_3 = {\n  id: \"monster\",\n  class: \"container\"\n};\n\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Monster Health\", -1\n/* HOISTED */\n);\n\nconst _hoisted_5 = {\n  class: \"healthbar\"\n};\nconst _hoisted_6 = {\n  id: \"player\",\n  class: \"container\"\n};\n\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Your Health\", -1\n/* HOISTED */\n);\n\nconst _hoisted_8 = {\n  class: \"healthbar\"\n};\nconst _hoisted_9 = {\n  key: 0,\n  class: \"container\"\n};\nconst _hoisted_10 = {\n  key: 0\n};\nconst _hoisted_11 = {\n  key: 1\n};\nconst _hoisted_12 = {\n  key: 2\n};\nconst _hoisted_13 = {\n  key: 1,\n  id: \"controls\"\n};\nconst _hoisted_14 = [\"disabled\"];\nconst _hoisted_15 = {\n  id: \"log\",\n  class: \"container\"\n};\n\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Battle Log\", -1\n/* HOISTED */\n);\n\nconst _hoisted_17 = {\n  key: 0\n};\nconst _hoisted_18 = {\n  key: 1\n};\n\nconst _hoisted_19 = /*#__PURE__*/_createElementVNode(\"span\", null, null, -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"section\", _hoisted_3, [_hoisted_4, _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", {\n    class: \"healthbar__value\",\n    style: _normalizeStyle($options.monsterHealthStatus)\n  }, null, 4\n  /* STYLE */\n  )])]), _createElementVNode(\"section\", _hoisted_6, [_hoisted_7, _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"div\", {\n    class: \"healthbar__value\",\n    style: _normalizeStyle($options.playerHealthStatus)\n  }, null, 4\n  /* STYLE */\n  )])]), $data.winner ? (_openBlock(), _createElementBlock(\"section\", _hoisted_9, [$data.winner === 'monster' ? (_openBlock(), _createElementBlock(\"h3\", _hoisted_10, \"You lost!\")) : $data.winner === 'player' ? (_openBlock(), _createElementBlock(\"h3\", _hoisted_11, \"You won!\")) : (_openBlock(), _createElementBlock(\"h3\", _hoisted_12, \"Draw\")), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.startNewGame && $options.startNewGame(...args))\n  }, \"Start new game\")])) : _createCommentVNode(\"v-if\", true), !$data.winner ? (_openBlock(), _createElementBlock(\"section\", _hoisted_13, [_createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.attackMonster && $options.attackMonster(...args))\n  }, \"ATTACK\"), _createElementVNode(\"button\", {\n    disabled: $options.mayUseSpecialAttack,\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.specialAttack && $options.specialAttack(...args))\n  }, \"SPECIAL ATTACK\", 8\n  /* PROPS */\n  , _hoisted_14), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.healPlayer && $options.healPlayer(...args))\n  }, \"HEAL\"), _createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.surrender && $options.surrender(...args))\n  }, \"SURRENDER\")])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"section\", _hoisted_15, [_hoisted_16, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.logMessages, (logMessage, key) => {\n    return _openBlock(), _createElementBlock(\"ul\", {\n      key: key\n    }, [_createElementVNode(\"span\", {\n      class: _normalizeClass({\n        'log--player': logMessage.actionBy === 'player',\n        'log--monster': logMessage.actionBy === 'monster'\n      })\n    }, _toDisplayString(logMessage.actionBy), 3\n    /* TEXT, CLASS */\n    ), logMessage.actionType === 'heal' ? (_openBlock(), _createElementBlock(\"span\", _hoisted_17, \" heals himself for \")) : (_openBlock(), _createElementBlock(\"span\", _hoisted_18, \" attacks and deals \")), _hoisted_19]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])])], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":"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","names":["_createElementVNode","id","class","_hoisted_1","_hoisted_4","style","$options","_hoisted_7","$data","_createElementBlock","_hoisted_10","_hoisted_11","_hoisted_12","onClick","disabled","_hoisted_14","_hoisted_16","_Fragment","_renderList","logMessage","key","actionBy","actionType","_hoisted_17","_hoisted_18","_hoisted_19"],"sourceRoot":"","sources":["/home/felidrick/Projects/VueProjects/learn1/src/ProjectC.vue"],"sourcesContent":["<template>\n    <header>\n      <h1>Testing vue js Project 1</h1>\n    </header>\n    <div id=\"game\">\n      <section id=\"monster\" class=\"container\">\n        <h2>Monster Health</h2>\n        <div class=\"healthbar\">\n          <div class=\"healthbar__value\" :style=\"monsterHealthStatus\"></div>\n        </div>\n      </section>\n      <section id=\"player\" class=\"container\">\n        <h2>Your Health</h2>\n        <div class=\"healthbar\">\n          <div class=\"healthbar__value\" :style=\"playerHealthStatus\"></div>\n        </div>\n      </section>\n      <section class=\"container\" v-if=\"winner\">\n        <h3 v-if=\"winner === 'monster'\">You lost!</h3>\n        <h3 v-else-if=\"winner === 'player'\">You won!</h3>\n        <h3 v-else>Draw</h3>\n        <button @click=\"startNewGame\">Start new game</button>\n      </section>\n      <section id=\"controls\" v-if=\"!winner\">\n        <button @click=\"attackMonster\">ATTACK</button>\n        <button :disabled=\"mayUseSpecialAttack\" @click=\"specialAttack\">SPECIAL ATTACK</button>\n        <button @click=\"healPlayer\">HEAL</button>\n        <button @click=\"surrender\">SURRENDER</button>\n      </section>\n      <section id=\"log\" class=\"container\">\n        <h2>Battle Log</h2>\n        <ul v-for=\"(logMessage, key) in logMessages\" :key=\"key\">\n          <span\n          :class=\"{'log--player': logMessage.actionBy === 'player', 'log--monster': logMessage.actionBy === 'monster'}\"\n          > {{logMessage.actionBy}} </span>\n\n          <span v-if=\"logMessage.actionType === 'heal'\">\n            heals himself for\n          </span>\n\n          <span v-else>\n            attacks and deals\n          </span>\n\n          <span>\n            \n          </span>\n        </ul>\n      </section>\n    </div>\n</template>\n\n<script>\n\nfunction generateRandomValues(max, min){\n    return Math.floor(Math.random()*(max - min)) + min;\n}\n\nexport default {\n    data() {\n        return {\n            playerHealth: 100,\n            monsterHealth: 100,\n            countRounds:0,\n            winner:null,\n            logMessages:[],\n        }\n    },\n    methods:{\n        attackMonster(){\n            this.countRounds++;\n            const attackValue = generateRandomValues(12,5);\n            this.monsterHealth -= attackValue;\n            this.attackPlayer();\n            this.logMessage('player','attack', attackValue);\n        },\n        attackPlayer(){\n            const attackValue = generateRandomValues(15,8);\n            this.playerHealth -= attackValue;\n            this.logMessage('monster','attack', attackValue);\n        },\n        specialAttack(){\n            this.countRounds++;\n            const attackValue = generateRandomValues(25, 10);\n            this.monsterHealth -= attackValue;\n            this.logMessage('player','speacial-attack', attackValue);\n        },\n        healPlayer(){\n            const healValue = generateRandomValues(20, 8);\n            if(this.playerHealth + healValue > 100){\n                this.playerHealth = 100;\n            }else{\n                this.playerHealth += healValue;\n            }\n\n            this.attackPlayer();\n            this.logMessage('player','heal', healValue);\n        },\n        startNewGame(){\n          this.monsterHealth = 100;\n          this.playerHealth =100;\n          this.countRounds = 0;\n          this.winner = null;\n        },\n        surrender(){\n          this.winner = 'monster';\n        },\n        logMessage(who, what, value){\n          this.logMessages.unshift({\n            actionBy: who,\n            actionTyoe: what,\n            actionValue: value,\n          });\n        }\n    },\n    computed:{\n        monsterHealthStatus(){\n          if(this.monsterHealth <= 0){\n            return {width: '0%'};\n          }\n            return {width: this.monsterHealth + '%'};\n        },\n        playerHealthStatus(){\n          if(this.playerHealth <= 0){\n            return {width: '0%'};\n          }\n            return {width: this.playerHealth + '%'};\n        },\n        mayUseSpecialAttack(){\n            return this.countRounds % 3 !== 0 ;\n        }\n    },\n    watch:{\n        monsterHealth(value){\n          if(value <= 0 && this.playerHealth <= 0){\n            this.winner = 'draw';\n          }else if(value <= 0){\n            this.winner = 'player';\n          }\n        },\n        playerHealth(value){\n          if(value <= 0 && this.monsterHealth <= 0){\n            this.winner = 'draw';\n          }else if(value <= 0){\n            this.winner = 'monster';\n          }\n        }\n    }\n}\n</script>\n\n<style>\n\n* {\n  box-sizing: border-box;\n}\n\nheader {\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.26);\n  padding: 0.5rem;\n  background-color: #880017;\n  color: white;\n  text-align: center;\n  margin-bottom: 2rem;\n}\n\nsection {\n  width: 90%;\n  max-width: 40rem;\n  margin: auto;\n}\n\n.healthbar {\n  width: 100%;\n  height: 40px;\n  border: 1px solid #575757;\n  margin: 1rem 0;\n  background: #fde5e5;\n}\n\n.healthbar__value {\n  background-color: #00a876;\n  width: 100%;\n  height: 100%;\n}\n\n.container {\n  text-align: center;\n  padding: 0.5rem;\n  margin: 1rem auto;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.26);\n  border-radius: 12px;\n}\n\n#monster h2,\n#player h2 {\n  margin: 0.25rem;\n}\n\n#controls {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n}\n\nbutton {\n  font: inherit;\n  border: 1px solid #88005b;\n  background-color: #88005b;\n  color: white;\n  padding: 1rem 2rem;\n  border-radius: 12px;\n  margin: 1rem;\n  width: 12rem;\n  cursor: pointer;\n  box-shadow: 1px 1px 4px rgba(0, 0, 0, 0.26);\n}\n\nbutton:focus {\n  outline: none;\n}\n\nbutton:hover,\nbutton:active {\n  background-color: #af0a78;\n  border-color: #af0a78;\n  box-shadow: 1px 1px 8px rgba(0, 0, 0, 0.26);\n}\n\nbutton:disabled {\n  background-color: #ccc;\n  border-color: #ccc;\n  box-shadow: none;\n  color: #3f3f3f;\n  cursor: not-allowed;\n}\n\n#log ul {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n\n#log li {\n  margin: 0.5rem 0;\n}\n\n.log--player {\n  color: #7700ff;\n}\n\n.log--monster {\n  color: #da8d00;\n}\n\n.log--damage {\n  color: red;\n}\n\n.log--heal {\n  color: green;\n}\n</style>"]},"metadata":{},"sourceType":"module"}